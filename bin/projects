#!/usr/bin/env bash

projects=${PROJECTS_DIR:-"$HOME/Projects"}

[ ! -d "$projects" ] && mkdir -p "$projects"

pushd () {
  command pushd "$@" > /dev/null
}
popd () {
  command popd "$@" > /dev/null
}

case "$1" in
  a*)
    if [ -z "$(ls -1 "$projects" | sort -n)" ]; then
      >&2 echo "projects: no projects available under $projects"
    else
      if [ -z "$2" ]; then
        target=$(ls -1 "$projects" | sort -n | fzf --no-multi --cycle --prompt "Projects> ")
      else
        target=$2
      fi
      if [ ! -z "$target" ] && [ -d "$projects/$target" ]; then
        echo -ne "launch --title='$target' vim\ncd $projects/$target" | kitty --session -
      else
        >&2 echo "projects: $target does not exist"
      fi
    fi
    ;;

  n*)
    target=$2
    if [ -z "$target" ]; then
      >&2 echo "projects: usage: projects new <project-name>"
    else
      if [ -d "$projects/$target" ]; then
        >&2 echo "projects: $target already exists"
      else
        mkdir -p "$projects"/"$2"
        pushd "$projects/$target" || exit
          git init
        popd
        echo -ne "launch --title='$target' vim\ncd $projects/$target" | kitty --session -
      fi
    fi
    ;;

  c*)
    uri=$2
    target=$(basename "$uri" .git)
    if [ -z "$target" ]; then
      >&2 echo "projects: usage: projects clone <project-git-uri>"
    else
      if [ -d "$projects/$target" ]; then
        >&2 echo "projects: $target already exists"
      else
        pushd "$projects"
          git clone "$uri"
        popd
        echo -ne "launch --title='$target' vim\ncd $projects/$target" | kitty --session -
      fi
    fi
    ;;

  *)
    >&2 echo "usage: projects [add|new|clone]"
    ;;
esac
